openapi: 3.0.4
info:
  title: nodeapp - API de productos
  description: API RESTful para gestión de productos y autenticación JWT, similar a Wallapop.
  version: 1.0.0
servers:
  - url: http://localhost:3000
tags:
  - name: auth
    description: Operaciones de autenticación
  - name: products
    description: Operaciones sobre productos
paths:
  /api/login:
    post:
      tags:
        - auth
      summary: Login de usuario
      description: Autentica un usuario por email y password, y devuelve un token JWT.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: JWT devuelto con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  tokenJWT:
                    type: string
        "401":
          description: Credenciales inválidas

  /api/products:
    get:
      tags:
        - products
      summary: Listar productos
      description: Retorna una lista de productos filtrables por nombre, precio y tags.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: tag
          schema:
            type: string
        - in: query
          name: min
          schema:
            type: number
        - in: query
          name: max
          schema:
            type: number
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: sort
          schema:
            type: string
        - in: query
          name: count
          schema:
            type: boolean
      responses:
        "200":
          description: Lista de productos
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: "#/components/schemas/Product"
                      count:
                        type: integer
        "401":
          description: Token no válido o ausente

    post:
      tags:
        - products
      summary: Crear nuevo producto
      description: Crea un nuevo producto asociado al usuario autenticado.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - price
              properties:
                name:
                  type: string
                price:
                  type: number
                tags:
                  type: array
                  items:
                    type: string
                    enum: ["work", "lifestyle", "motor", "mobile"]
                  description: Lista de tags
                image:
                  type: string
                  format: binary
                  description: Archivo de imagen
      responses:
        "201":
          description: Producto creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Datos inválidos
        "401":
          description: Token no válido o ausente

  /api/products/{productId}:
    get:
      tags:
        - products
      summary: Obtener un producto por ID
      security:
        - bearerAuth: []
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Producto no encontrado

    put:
      tags:
        - products
      summary: Actualizar producto
      security:
        - bearerAuth: []
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                tags:
                  type: array
                  items:
                    type: string
                    enum: ["work", "lifestyle", "motor", "mobile"]
                  description: Lista de tags
                image:
                  type: string
                  format: binary
                  description: Nueva imagen (opcional)
      responses:
        "200":
          description: Producto actualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"

    delete:
      tags:
        - products
      summary: Eliminar producto por ID
      security:
        - bearerAuth: []
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Producto eliminado
        "404":
          description: Producto no encontrado

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        price:
          type: number
        tags:
          type: array
          items:
            type: string
        image:
          type: string
        owner:
          type: string
